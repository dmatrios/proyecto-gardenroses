@model List<gardenrosesmvc2.Models.Producto>

@{
    ViewBag.Title = "Gestión de Productos";
}

<h2 class="text-primary">Gestión de Productos</h2>

<div class="row mb-3">
    <div class="col-md-6">
        <form id="formProducto">
            <input type="hidden" id="idProducto" name="idProducto" />

            <div class="form-group">
                <label>Nombre:</label>
                <input type="text" id="nombre" name="nombre" class="form-control" required />
            </div>

            <div class="form-group">
                <label>Descripción:</label>
                <input type="text" id="descripcion" name="descripcion" class="form-control" required />
            </div>

            <div class="form-group">
                <label>Precio:</label>
                <input type="number" step="0.01" id="precio" name="precio" class="form-control" required />
            </div>

            <div class="form-group">
                <label>Stock:</label>
                <input type="number" id="stock" name="stock" class="form-control" required />
            </div>

            <button type="button" class="btn btn-success" onclick="guardar()">Guardar</button>
            <button type="button" class="btn btn-primary" onclick="actualizar()">Actualizar</button>
            <button type="button" class="btn btn-secondary" onclick="limpiar()">Limpiar</button>
        </form>
    </div>
</div>

<hr />

<table class="table table-bordered table-hover">
    <thead class="thead-dark">
        <tr>
            <th>ID</th>
            <th>Nombre</th>
            <th>Descripción</th>
            <th>Precio</th>
            <th>Stock</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var p in Model)
        {
            <tr>
                <td>@p.idProducto</td>
                <td>@p.nombre</td>
                <td>@p.descripcion</td>
                <td>@p.precio</td>
                <td>@p.stock</td>
                <td>
                    <button class="btn btn-info btn-sm" onclick='seleccionar(@Html.Raw(Json.Encode(p)))'>Seleccionar</button>
                    <button class="btn btn-danger btn-sm" onclick='eliminar(@p.idProducto)'>Eliminar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts {
    <script>
        function limpiar() {
            document.getElementById("formProducto").reset();
            document.getElementById("idProducto").value = "";
        }

        function guardar() {
            const producto = {
                nombre: document.getElementById("nombre").value,
                descripcion: document.getElementById("descripcion").value,
                precio: parseFloat(document.getElementById("precio").value),
                stock: parseInt(document.getElementById("stock").value)
            };

            fetch('@Url.Action("Crear", "Producto")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(producto)
            }).then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    alert("Error al guardar el producto.");
                }
            });
        }

        function actualizar() {
            const producto = {
                idProducto: document.getElementById("idProducto").value,
                nombre: document.getElementById("nombre").value,
                descripcion: document.getElementById("descripcion").value,
                precio: parseFloat(document.getElementById("precio").value),
                stock: parseInt(document.getElementById("stock").value)
            };

            if (!producto.idProducto) {
                alert("Debe seleccionar un producto para actualizar.");
                return;
            }

            fetch('@Url.Action("Editar", "Producto")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(producto)
            }).then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    alert("Error al actualizar el producto.");
                }
            });
        }

        function seleccionar(producto) {
            document.getElementById("idProducto").value = producto.idProducto;
            document.getElementById("nombre").value = producto.nombre;
            document.getElementById("descripcion").value = producto.descripcion;
            document.getElementById("precio").value = producto.precio;
            document.getElementById("stock").value = producto.stock;
        }

        function eliminar(id) {
            if (confirm("¿Seguro que deseas eliminar este producto?")) {
                fetch('@Url.Action("Eliminar", "Producto")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ id: id })
                }).then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert("Error al eliminar el producto.");
                    }
                });
            }
        }
    </script>
}
